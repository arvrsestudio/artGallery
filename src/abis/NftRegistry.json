{
  "contractName": "NftRegistry",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_url",
          "type": "string"
        }
      ],
      "name": "MetadataAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "RegistryCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        }
      ],
      "name": "Mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Registry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "approveAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "approveMany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "assignDataToToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getMetadataAtID",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getTokenOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "registries",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "createRegistry",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balance1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "getRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"}],\"name\":\"MetadataAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"RegistryCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"Mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Registry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"approveAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"approveMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"assignDataToToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"createRegistry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getMetadataAtID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getTokenOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"registries\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"Mint(string)\":{\"notice\":\"this function allows to mint more of your NFT  \"},\"Registry(string,string,string,address)\":{\"notice\":\"a registry function that iis been called by the NFT registry smart contract\"},\"approveAll(address)\":{\"notice\":\"this function allows to approve all the tokens the address owns at once\"},\"approveMany(address,uint256[])\":{\"notice\":\"this function allows to approve more than one token id at once\"},\"assignDataToToken(uint256,string)\":{\"notice\":\"this function assignes the URI to automaticlay add the id number at the end of the URI\"},\"burn(string,uint256)\":{\"notice\":\"this function allows you burn your NFT  \"},\"getMetadataAtID(uint256)\":{\"notice\":\"this function helps with queries to Fetch the metadata for a givine token id\"},\"getTokenOwner(uint256)\":{\"notice\":\"this function helps with queries to Fetch the owner address of the token by givine token id\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"this overload function allows to transfer tokens and updates all the mapping queries(without filling the URI)  \"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"this overload function allows to transfer tokens and updates all the mapping queries(with filling the URI)  \"},\"tokensOf(address)\":{\"notice\":\"this function helps with queries to Fetch all the tokens that the address owns by givine address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Zaid/Desktop/New folder (13)/NFT_Contract_Factory/src/contracts/NftRegistry.sol\":\"NftRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Zaid/Desktop/New folder (13)/NFT_Contract_Factory/src/contracts/ERC721_FORKED.sol\":{\"keccak256\":\"0x06d8b7f49c64ab48ba288f0fb23b03ee5504578e63317c76230f91e49190cdb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a63a184e520504ac8a63cead234aac0632aac0acedce01777577106c0cde583d\",\"dweb:/ipfs/QmXvCjiAfWWfKptyCScNVV3Pb5YEsnu8cZY5kagC7RUN4h\"]},\"/C/Users/Zaid/Desktop/New folder (13)/NFT_Contract_Factory/src/contracts/NftFactory.sol\":{\"keccak256\":\"0xbb0f0ff18075b7841f1eefd6196694de967ee173b25427fa3cff81ede398947c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e433ecbef6cf599b5437d7805538e6b55cdf7be81aeeb4478e00ff752ec02db7\",\"dweb:/ipfs/QmS4Xer28TQ8ohLG1mock5v2L38xcaKYi6LYeXQzaF9PTE\"]},\"/C/Users/Zaid/Desktop/New folder (13)/NFT_Contract_Factory/src/contracts/NftRegistry.sol\":{\"keccak256\":\"0x62d05cc78770b7b06e1ded3533ba3598a2b60c513cc64f9f64a5dc10acff26c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33c3c30d6c6d617d9152c519b21d945ace5c550774c95d1513f3353d2f07e992\",\"dweb:/ipfs/QmcH7KFcxWz27YnUVdzVSjk5AkiZaBDUX5jnL5HQojGPNz\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b710eb003944777135f027500a5a57b479fe857849f5f467c1ef9687401e3c95\",\"dweb:/ipfs/QmcELzi6KRzAs3DXwxdsoKWRJ13KSeipKQsJgD3unctdZM\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x4b087f06b6670a131a5a14e53b1d2a5ef19c034cc5ec42eeebcf9554325744ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6a6af5d848334e40db419773f6360601e311ffc21c2e274f730b8c542da99fd\",\"dweb:/ipfs/QmfA24cxQ2g41ZWUuDF295dxDJ4xF1bSDYtC3EaLd7CzW8\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa1e12f97981f1d0964b1c048978606a57127c56c438bab61cdfe269cad859a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5eefac1760f524971e14aa3f3d79515a3d54fd28c1d3bdca0b36127da349b830\",\"dweb:/ipfs/QmUMzkyH3ytJX5gVPizQruNLhkKmuJb3nFqBDad4LPdg5U\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "207:2177:2:-:0;;;371:1:1;349:23;;864:42:2;832:75;;;;;;;;;;;;;;;;;;;;280:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:40:5;435:10;787:20;;768:18;;;:40;;:::i;:::-;340:11:2;327:10;;:24;;;;;;;;;;;;;;;;;;280:77;207:2177;;1507:198:5;1605:10;1590:25;;:11;:25;;;;;1582:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:4;1658:20;:33;1679:11;1658:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1507:198;:::o;207:2177:2:-;;;;;;;",
  "deployedSourceMap": "207:2177:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:148:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1061:920:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4000:189:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4918:100:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7234:418;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6712:211;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8608:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6474:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4327:328:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1536:375;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7000:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3187:165:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4674:177:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6293:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4391:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2102:279:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5087:104:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3441:461:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8011:295:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2965:99:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6455:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4790:863;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1987:109:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5727:659:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5262:792:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2703:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:401;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8377:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;965:148:5;1050:4;1073:20;:33;1094:11;1073:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:40;;965:148;;;:::o;1061:920:2:-;1190:4;1233:1;1211:24;;:10;:24;;;;1203:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:1;1276:4;1270:18;:23;;1262:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:1;1338:6;1332:20;:25;;1324:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:6;1453:24;;;;;;1422:10;1433:6;1422:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;;1406:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:71;;1390:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1525:20;1548:17;;;;;;;;;;;:27;;;1576:10;1548:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1525:62;;1594:18;1615:17;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1594:49;;1650:17;1670:34;1700:3;1670:25;1682:12;1678:16;;:2;:16;935:2;1670:7;;:25;;;;:::i;:::-;:29;;:34;;;;:::i;:::-;1650:54;;1743:9;1727:12;:25;;1711:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:17;;;;;;;;;;;:30;;;1867:10;1879;;;;;;;;;;;1891:9;1836:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:47;1917:4;1923:6;1931:11;1944:10;1908:8;:47::i;:::-;1971:4;1964:11;;;;;1061:920;;;;;:::o;4000:189:1:-;4047:23;4073:20;4082:10;4073:8;:20::i;:::-;4047:46;;4105:9;4100:84;4124:6;:13;4120:1;:17;4100:84;;;4153:23;4161:3;4166:6;4173:1;4166:9;;;;;;;;;;;;;;4153:7;:23::i;:::-;4139:3;;;;;;;4100:84;;;;4000:189;;:::o;4918:100:0:-;4972:13;5005:5;4998:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4918:100;:::o;7718:221::-;7794:7;7822:16;7830:7;7822;:16::i;:::-;7814:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7907:15;:24;7923:7;7907:24;;;;;;;;;;;;;;;;;;;;;7900:31;;7718:221;;;:::o;7234:418::-;7315:13;7331:30;7353:7;7331:21;:30::i;:::-;7315:46;;7386:5;7380:11;;:2;:11;;;;7372:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7466:5;7450:21;;:12;:10;:12::i;:::-;:21;;;:76;;;;7475:51;7506:5;7513:12;:10;:12::i;:::-;7475:30;:51::i;:::-;7450:76;7442:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7623:21;7632:2;7636:7;7623:8;:21::i;:::-;7234:418;;;:::o;6712:211::-;6773:7;6894:21;:12;:19;:21::i;:::-;6887:28;;6712:211;:::o;8608:305::-;8769:41;8788:12;:10;:12::i;:::-;8802:7;8769:18;:41::i;:::-;8761:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8877:28;8887:4;8893:2;8897:7;8877:9;:28::i;:::-;8608:305;;;:::o;6474:162::-;6571:7;6598:30;6622:5;6598:13;:20;6612:5;6598:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6591:37;;6474:162;;;;:::o;4327:328:1:-;4471:1;4455:18;;:4;:18;;;;4447:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4522:1;4508:16;;:2;:16;;;;4500:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4610:39;4627:4;4633:2;4637:7;4610:39;;;;;;;;;;;;:16;:39::i;:::-;4327:328;;;:::o;1536:375::-;1687:18;1698:6;1687:10;:18::i;:::-;1678:27;;1722:4;1714:5;:12;;;;;;;;;;;;:::i;:::-;;1743:6;1733:7;:16;;;;;;;;;;;;:::i;:::-;;1771:11;1756:12;:26;;;;;;;;;;;;:::i;:::-;;1800:6;1789:8;;:17;;;;;;;;;;;;;;;;;;1827:1;1813:11;:15;;;;1858:47;;;;;;;;1867:4;1858:47;;;;1873:6;1858:47;;;;1881:11;1858:47;;;;1894:10;1858:47;;;;;1837:10;1848:6;1837:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:375;;;;:::o;7000:172:0:-;7075:7;7096:15;7117:22;7133:5;7117:12;:15;;:22;;;;:::i;:::-;7095:44;;;7157:7;7150:14;;;7000:172;;;:::o;3187:165:1:-;3242:16;3293:1;3275:20;;:6;:20;;;;3267:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3327:11;:19;3339:6;3327:19;;;;;;;;;;;;;;;3320:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3187:165;;;:::o;4674:177:0:-;4746:7;4773:70;4790:7;4773:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4766:77;;4674:177;;;:::o;6293:97::-;6341:13;6374:8;6367:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6293:97;:::o;4391:221::-;4463:7;4508:1;4491:19;;:5;:19;;;;4483:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4575:29;:13;:20;4589:5;4575:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4568:36;;4391:221;;;:::o;2102:279:2:-;2188:7;2286:6;2270:24;;;;;;2239:10;2250:6;2239:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;;2223:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:71;2207:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:10;2360:6;2349:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;2342:33;;2102:279;;;:::o;5087:104:0:-;5143:13;5176:7;5169:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5087:104;:::o;3441:461:1:-;3734:9;3729:168;3753:9;:16;3749:1;:20;3729:168;;;3863:26;3871:3;3876:9;3886:1;3876:12;;;;;;;;;;;;;;3863:7;:26::i;:::-;3771:3;;;;;;;3729:168;;;;3441:461;;:::o;8011:295:0:-;8126:12;:10;:12::i;:::-;8114:24;;:8;:24;;;;8106:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8226:8;8181:18;:32;8200:12;:10;:12::i;:::-;8181:32;;;;;;;;;;;;;;;:42;8214:8;8181:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;8279:8;8250:48;;8265:12;:10;:12::i;:::-;8250:48;;;8289:8;8250:48;;;;;;;;;;;;;;;;;;;;8011:295;;:::o;2965:99:1:-;3021:7;3044:10;:14;3055:2;3044:14;;;;;;;;;;;;;;;;;;;;;3037:21;;2965:99;;;:::o;6455:197::-;6520:4;6571:10;6541:40;;:10;6552:6;6541:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;6533:49;;;;;;6589:10;6595:3;6589:5;:10::i;:::-;6613;:15;6624:3;6613:15;;;;;;;;;;;;6606:22;;;;;;;;;;;6642:4;6635:11;;6455:197;;;;:::o;4790:863::-;4951:41;4970:12;:10;:12::i;:::-;4984:7;4951:18;:41::i;:::-;4935:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5090:1;5074:18;;:4;:18;;;;5066:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5141:1;5127:16;;:2;:16;;;;5119:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5170:39;5184:4;5190:2;5194:7;5203:5;5170:13;:39::i;:::-;5238:2;5216:10;:19;5227:7;5216:19;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;5247;5274:11;:17;5286:4;5274:17;;;;;;;;;;;;;;;5247:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5298:27;5359:1;5342:7;:14;:18;5328:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5298:63;;5368:23;5394:11;:15;5406:2;5394:15;;;;;;;;;;;;;;;5368:41;;5416:5;5427:7;5416:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5460:5;5442:11;:15;5454:2;5442:15;;;;;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;5472:9;5497;5492:119;5516:7;:14;5512:1;:18;5492:119;;;5564:7;5550;5558:1;5550:10;;;;;;;;;;;;;;:21;5546:57;;5592:7;5600:1;5592:10;;;;;;;;;;;;;;5573;5584:3;;;;;;5573:15;;;;;;;;;;;;;:30;;;;;5546:57;5532:3;;;;;;;5492:119;;;;5637:10;5617:11;:17;5629:4;5617:17;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:::i;:::-;;4790:863;;;;;;;;:::o;1987:109:2:-;2028:7;2051:17;;;;;;;;;;;:27;;;2079:10;2051:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:46;;1987:109;:::o;5727:659:1:-;5796:8;;;;;;;;;;;5782:22;;:10;:22;;;5774:31;;;;;;5812:25;5840:13;:11;:13::i;:::-;5812:41;;5923:36;5929:10;5941:17;5923:5;:36::i;:::-;6025:10;5993;:29;6004:17;5993:29;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;6134:21;6158:11;:23;6170:10;6158:23;;;;;;;;;;;;;;;6134:47;;6188:3;6197:17;6188:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6248:3;6222:11;:23;6234:10;6222:23;;;;;;;;;;;;;;;:29;;;;;;;;:::i;:::-;;6377:3;6338:17;:36;6356:17;6338:36;;;;;;;;;;;:42;;;;;;;;;;;;:::i;:::-;;5727:659;;;:::o;5262:792:0:-;5335:13;5369:16;5377:7;5369;:16::i;:::-;5361:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5450:23;5476:10;:19;5487:7;5476:19;;;;;;;;;;;5450:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5506:18;5527:9;:7;:9::i;:::-;5506:30;;5634:1;5618:4;5612:18;:23;5608:72;;;5659:9;5652:16;;;;;;5608:72;5810:1;5790:9;5784:23;:27;5780:108;;;5859:4;5865:9;5842:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5828:48;;;;;;5780:108;6020:4;6026:18;:7;:16;:18::i;:::-;6003:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5989:57;;;;5262:792;;;;:::o;999:45:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;671:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2703:144::-;2782:13;2814:17;:27;2832:8;2814:27;;;;;;;;;;;2807:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2703:144;;;:::o;2199:401::-;2293:8;;;;;;;;;;;2279:22;;:10;:22;;;2271:31;;;;;;2309:17;2335:3;2309:30;;2372:4;2378:10;;;;;;;;;;;;;;;;;2355:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:41;;2420:4;2426:16;2439:2;2426:12;:16::i;:::-;2403:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2396:47;;2474:4;2480:14;;;;;;;;;;;;;;;;;2457:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:45;;2535:4;2504:17;:21;2522:2;2504:21;;;;;;;;;;;:36;;;;;;;;;;;;:::i;:::-;;2564:11;2572:2;2564:7;:11::i;:::-;2547:47;;;2577:2;2588:4;2547:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:401;;;:::o;8377:164:0:-;8474:4;8498:18;:25;8517:5;8498:25;;;;;;;;;;;;;;;:35;8524:8;8498:35;;;;;;;;;;;;;;;;;;;;;;;;;8491:42;;8377:164;;;;:::o;3538:215:7:-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;10958:127:0:-;11023:4;11047:30;11069:7;11047:12;:21;;:30;;;;:::i;:::-;11040:37;;10958:127;;;:::o;598:104:15:-;651:15;685:10;678:17;;598:104;:::o;17004:199:0:-;17106:2;17079:15;:24;17095:7;17079:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;17169:7;17165:2;17124:53;;17133:30;17155:7;17133:21;:30::i;:::-;17124:53;;;;;;;;;;;;17004:199;;:::o;7820:121:16:-;7889:7;7915:19;7923:3;:10;;7915:7;:19::i;:::-;7908:26;;7820:121;;;:::o;11252:369:0:-;11345:4;11370:16;11378:7;11370;:16::i;:::-;11362:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11446:13;11462:30;11484:7;11462:21;:30::i;:::-;11446:46;;11522:5;11511:16;;:7;:16;;;:51;;;;11555:7;11531:31;;:20;11543:7;11531:11;:20::i;:::-;:31;;;11511:51;:101;;;;11566:46;11597:5;11604:7;11566:30;:46::i;:::-;11511:101;11503:110;;;11252:369;;;;:::o;14409:606::-;14541:4;14507:38;;:30;14529:7;14507:21;:30::i;:::-;:38;;;14499:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14642:1;14628:16;;:2;:16;;;;14620:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14698:39;14719:4;14725:2;14729:7;14698:20;:39::i;:::-;14802:29;14819:1;14823:7;14802:8;:29::i;:::-;14844:35;14871:7;14844:13;:19;14858:4;14844:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;14890:30;14912:7;14890:13;:17;14904:2;14890:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;14933:29;14950:7;14959:2;14933:12;:16;;:29;;;;;:::i;:::-;;14999:7;14995:2;14980:27;;14989:4;14980:27;;;;;;;;;;;;14409:606;;;:::o;9250:135:17:-;9321:7;9355:22;9359:3;:10;;9371:5;9355:3;:22::i;:::-;9347:31;;9340:38;;9250:135;;;;:::o;7630:420:1:-;7709:13;7734:20;7763:5;7734:35;;7781:9;7776:220;7800:7;:14;7796:1;:18;7776:220;;;7871:11;7865:18;;7844:39;;7850:7;7858:1;7850:10;;;;;;;;;;;;;;;;7844:17;;:39;;;;:91;;;;;7923:11;7917:18;;7896:39;;7902:7;7910:1;7902:10;;;;;;;;;;;;;;;;7896:17;;:39;;;;7844:91;7830:158;;;7985:2;7971:7;7979:1;7971:10;;;;;;;;;;;;;;;;7965:17;;:22;7958:30;;7945:7;7953:1;7945:10;;;;;;;;;;;:43;;;;;;;;;;;7830:158;7816:3;;;;;;;7776:220;;;;8017:7;8002:23;;8039:5;8032:12;;;7630:420;;;:::o;8269:233:16:-;8349:7;8358;8378:11;8391:13;8408:22;8412:3;:10;;8424:5;8408:3;:22::i;:::-;8377:53;;;;8456:3;8448:12;;8486:5;8478:14;;8440:55;;;;;;8269:233;;;;;:::o;9522:211::-;9629:7;9679:44;9684:3;:10;;9704:3;9696:12;;9710;9679:4;:44::i;:::-;9671:53;;9648:78;;9522:211;;;;;:::o;8806:112:17:-;8866:7;8892:19;8900:3;:10;;8892:7;:19::i;:::-;8885:26;;8806:112;;;:::o;13520:552:0:-;13580:13;13596:30;13618:7;13596:21;:30::i;:::-;13580:46;;13657:48;13678:5;13693:1;13697:7;13657:20;:48::i;:::-;13746:29;13763:1;13767:7;13746:8;:29::i;:::-;13865:1;13834:10;:19;13845:7;13834:19;;;;;;;;;;;13828:33;;;;;;;;;;;;;;;;:38;13824:97;;13890:10;:19;13901:7;13890:19;;;;;;;;;;;;13883:26;;;;:::i;:::-;13824:97;13933:36;13961:7;13933:13;:20;13947:5;13933:20;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;;13982:28;14002:7;13982:12;:19;;:28;;;;:::i;:::-;;14056:7;14052:1;14028:36;;14037:5;14028:36;;;;;;;;;;;;13520:552;;:::o;10373:272::-;10487:28;10497:4;10503:2;10507:7;10487:9;:28::i;:::-;10534:48;10557:4;10563:2;10567:7;10576:5;10534:22;:48::i;:::-;10526:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10373:272;;;;:::o;12887:404::-;12981:1;12967:16;;:2;:16;;;;12959:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13040:16;13048:7;13040;:16::i;:::-;13039:17;13031:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13102:45;13131:1;13135:2;13139:7;13102:20;:45::i;:::-;13160:30;13182:7;13160:13;:17;13174:2;13160:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;13203:29;13220:7;13229:2;13203:12;:16;;:29;;;;;:::i;:::-;;13275:7;13271:2;13250:33;;13267:1;13250:33;;;;;;;;;;;;12887:404;;:::o;210:725:18:-;266:13;492:1;483:5;:10;479:51;;;509:10;;;;;;;;;;;;;;;;;;;;;479:51;539:12;554:5;539:20;;569:14;593:75;608:1;600:4;:9;593:75;;625:8;;;;;;;655:2;647:10;;;;;;;;;593:75;;;677:19;709:6;699:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:39;;726:13;751:1;742:6;:10;726:26;;769:5;762:12;;784:114;799:1;791:4;:9;784:114;;859:2;852:4;:9;;;;;;847:2;:14;834:29;;816:6;823:7;;;;;;;816:15;;;;;;;;;;;:47;;;;;;;;;;;885:2;877:10;;;;;;;;;784:114;;;921:6;907:21;;;;;;210:725;;;;:::o;6900:501:1:-;6959:12;6980:17;7000:3;6980:23;;7010:21;7044:9;7034:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7010:44;;7061:9;7093:1;7085:4;:9;7081:32;;;7103:10;;;;;;;;;;;;;;;;;7096:17;;;;;;;7081:32;7120:143;7135:1;7127:4;:9;7120:143;;7147:17;7174:2;7167:4;:9;;;;;;7147:29;;7199:2;7192:4;:9;;;;;;7185:16;;7244:9;7239:2;:14;7226:29;;7210:8;7219:3;;;;;;7210:13;;;;;;;;;;;:45;;;;;;;;;;;7120:143;;;;7269:14;7300:1;7296;:5;7286:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7269:33;;7314:9;7309:72;7334:1;7329;:6;7309:72;;7358:8;7371:1;7367;:5;7358:15;;;;;;;;;;;;;;;;7351:1;7353;7351:4;;;;;;;;;;;:22;;;;;;;;;;;7337:3;;;;;;;7309:72;;;;7394:1;7387:8;;;;;;6900:501;;;;:::o;7588:149:16:-;7672:4;7695:35;7705:3;:10;;7725:3;7717:12;;7695:9;:35::i;:::-;7688:42;;7588:149;;;;:::o;4491:108::-;4547:7;4573:3;:12;;:19;;;;4566:26;;4491:108;;;:::o;17816:93:0:-;;;;:::o;8365:135:17:-;8435:4;8458:35;8466:3;:10;;8486:5;8478:14;;8458:7;:35::i;:::-;8451:42;;8365:135;;;;:::o;8068:129::-;8135:4;8158:32;8163:3;:10;;8183:5;8175:14;;8158:4;:32::i;:::-;8151:39;;8068:129;;;;:::o;7027:183:16:-;7116:4;7139:64;7144:3;:10;;7164:3;7156:12;;7194:5;7178:23;;7170:32;;7139:4;:64::i;:::-;7132:71;;7027:183;;;;;:::o;4452:201:17:-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;4942:274:16:-;5009:7;5018;5067:5;5045:3;:12;;:19;;;;:27;5037:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:22;5147:3;:12;;5160:5;5147:19;;;;;;;;;;;;;;;;;;5122:44;;5184:5;:10;;;5196:5;:12;;;5176:33;;;;;4942:274;;;;;:::o;6403:315::-;6497:7;6516:16;6535:3;:12;;:17;6548:3;6535:17;;;;;;;;;;;;6516:36;;6582:1;6570:8;:13;;6585:12;6562:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6651:3;:12;;6675:1;6664:8;:12;6651:26;;;;;;;;;;;;;;;;;;:33;;;6644:40;;;6403:315;;;;;:::o;4013:107:17:-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;7369:140:16:-;7446:4;7469:33;7477:3;:10;;7497:3;7489:12;;7469:7;:33::i;:::-;7462:40;;7369:140;;;;:::o;16281:604:0:-;16402:4;16429:15;:2;:13;;;:15::i;:::-;16424:60;;16468:4;16461:11;;;;16424:60;16494:23;16520:252;16573:45;;;16633:12;:10;:12::i;:::-;16660:4;16679:7;16701:5;16536:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16520:252;;;;;;;;;;;;;;;;;:2;:15;;;;:252;;;;;:::i;:::-;16494:278;;16783:13;16810:10;16799:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16783:48;;1382:10;16860:16;;16850:26;;;:6;:26;;;;16842:35;;;;16281:604;;;;;;;:::o;4278:123:16:-;4349:4;4393:1;4372:3;:12;;:17;4385:3;4372:17;;;;;;;;;;;;:22;;4365:29;;4278:123;;;;:::o;2212:1512:17:-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;1836:678:16:-;1912:4;2026:16;2045:3;:12;;:17;2058:3;2045:17;;;;;;;;;;;;2026:36;;2089:1;2077:8;:13;2073:435;;;2143:3;:12;;2161:38;;;;;;;;2178:3;2161:38;;;;2191:5;2161:38;;;2143:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:3;:12;;:19;;;;2335:3;:12;;:17;2348:3;2335:17;;;;;;;;;;;:39;;;;2395:4;2388:11;;;;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;1836:678;;;;;;:::o;2682:1517::-;2746:4;2860:16;2879:3;:12;;:17;2892:3;2879:17;;;;;;;;;;;;2860:36;;2923:1;2911:8;:13;2907:1286;;3267:21;3302:1;3291:8;:12;3267:36;;3317:17;3359:1;3337:3;:12;;:19;;;;:23;3317:43;;3600:26;3629:3;:12;;3642:9;3629:23;;;;;;;;;;;;;;;;;;3600:52;;3774:9;3744:3;:12;;3757:13;3744:27;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;3896:1;3880:13;:17;3849:3;:12;;:28;3862:9;:14;;;3849:28;;;;;;;;;;;:48;;;;4003:3;:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4096:3;:12;;:17;4109:3;4096:17;;;;;;;;;;;4089:24;;;4135:4;4128:11;;;;;;;;2907:1286;4177:5;4170:12;;;2682:1517;;;;;:::o;726:413:14:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;3805:127:17:-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4608:523:14:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.8.4;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\r\nimport \"./NftFactory.sol\";\r\n\r\ncontract NftRegistry is NftFactory {\r\n  using SafeMath for uint256;\r\n\r\n  constructor(address _feeAccount) public {\r\n    feeAccount = _feeAccount;\r\n  }\r\n\r\n  /*\r\n   * when you deploy Cifi_Token to Local testNet (Ganache) or to testnet like binance test net take the address of the\r\n   * deployed Cifi_Token and add it below\r\n   * the address below is just a dummy one that we need to change once we deploy the Cifi_Token Contract to the\r\n   * binance main net and take the address of the contract and add it below\r\n   * but for testing purposes just deploy the cifiToken to Ganache and take the address and use it.\r\n   */\r\n\r\n  ERC20 cifiTokenContract = ERC20(0x135a6636C8d1D5099C6a6A1D8D0762C4c9Ed9f09);\r\n  uint256 constant FEE = 10;\r\n\r\n  event RegistryCreated(\r\n    string name,\r\n    string symbol,\r\n    string description,\r\n    address caller\r\n  );\r\n\r\n  function createRegistry(\r\n    string memory name,\r\n    string memory symbol,\r\n    string memory description\r\n  ) public returns (bool) {\r\n    require(msg.sender != address(0), \"Invalid address\");\r\n    require(bytes(name).length != 0, \"name can't be empty\");\r\n    require(bytes(symbol).length != 0, \"symbol can't be empty\");\r\n    require(\r\n      keccak256(bytes(registries[symbol].symbol)) != keccak256(bytes(symbol)),\r\n      \"symbol is already taken\"\r\n    );\r\n    uint256 balaceOfUser = cifiTokenContract.balanceOf(msg.sender);\r\n    uint8 cifiDecimals = cifiTokenContract.decimals();\r\n    uint256 feeAmount = FEE.mul(10**cifiDecimals).div(100);\r\n    require(\r\n      balaceOfUser >= feeAmount,\r\n      \"insufficient  Balance, unable to pay the registration Fee\"\r\n    );\r\n\r\n    cifiTokenContract.transferFrom(msg.sender, feeAccount, feeAmount);\r\n    Registry(name, symbol, description, msg.sender);\r\n\r\n    return true;\r\n  }\r\n\r\n  function balance1() public view returns (uint256) {\r\n    return cifiTokenContract.balanceOf(msg.sender);\r\n  }\r\n\r\n  function getRegistryAddress(string memory symbol)\r\n    public\r\n    view\r\n    returns (address)\r\n  {\r\n    require(\r\n      keccak256(bytes(registries[symbol].symbol)) == keccak256(bytes(symbol)),\r\n      \"symbol is already taken\"\r\n    );\r\n    return registries[symbol].creator;\r\n  }\r\n}\r\n",
  "sourcePath": "C:/Users/Zaid/Desktop/New folder (13)/NFT_Contract_Factory/src/contracts/NftRegistry.sol",
  "ast": {
    "absolutePath": "/C/Users/Zaid/Desktop/New folder (13)/NFT_Contract_Factory/src/contracts/NftRegistry.sol",
    "exportedSymbols": {
      "Address": [
        3385
      ],
      "Context": [
        3408
      ],
      "ERC165": [
        1949
      ],
      "ERC20": [
        2819
      ],
      "ERC721_FORKED": [
        914
      ],
      "EnumerableMap": [
        3968
      ],
      "EnumerableSet": [
        4460
      ],
      "IERC165": [
        1961
      ],
      "IERC20": [
        2897
      ],
      "IERC721": [
        3013
      ],
      "IERC721Enumerable": [
        3044
      ],
      "IERC721Metadata": [
        3071
      ],
      "IERC721Receiver": [
        3089
      ],
      "NftFactory": [
        1687
      ],
      "NftRegistry": [
        1888
      ],
      "SafeMath": [
        2316
      ],
      "Strings": [
        4547
      ]
    },
    "id": 1889,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1689,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1690,
        "nodeType": "ImportDirective",
        "scope": 1889,
        "sourceUnit": 2820,
        "src": "67:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 1691,
        "nodeType": "ImportDirective",
        "scope": 1889,
        "sourceUnit": 2317,
        "src": "124:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Zaid/Desktop/New folder (13)/NFT_Contract_Factory/src/contracts/NftFactory.sol",
        "file": "./NftFactory.sol",
        "id": 1692,
        "nodeType": "ImportDirective",
        "scope": 1889,
        "sourceUnit": 1688,
        "src": "177:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1693,
              "name": "NftFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1687,
              "src": "231:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NftFactory_$1687",
                "typeString": "contract NftFactory"
              }
            },
            "id": 1694,
            "nodeType": "InheritanceSpecifier",
            "src": "231:10:2"
          }
        ],
        "contractDependencies": [
          914,
          1687,
          1949,
          1961,
          3013,
          3044,
          3071,
          3408
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1888,
        "linearizedBaseContracts": [
          1888,
          1687,
          914,
          3044,
          3071,
          3013,
          1949,
          1961,
          3408
        ],
        "name": "NftRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1697,
            "libraryName": {
              "id": 1695,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2316,
              "src": "253:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2316",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "247:27:2",
            "typeName": {
              "id": 1696,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 1706,
              "nodeType": "Block",
              "src": "320:37:2",
              "statements": [
                {
                  "expression": {
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1702,
                      "name": "feeAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 932,
                      "src": "327:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1703,
                      "name": "_feeAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1699,
                      "src": "340:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "327:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1705,
                  "nodeType": "ExpressionStatement",
                  "src": "327:24:2"
                }
              ]
            },
            "id": 1707,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1699,
                  "mutability": "mutable",
                  "name": "_feeAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1707,
                  "src": "292:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "291:21:2"
            },
            "returnParameters": {
              "id": 1701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:2"
            },
            "scope": 1888,
            "src": "280:77:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1712,
            "mutability": "mutable",
            "name": "cifiTokenContract",
            "nodeType": "VariableDeclaration",
            "scope": 1888,
            "src": "832:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2819",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 1708,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2819,
              "src": "832:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2819",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831333561363633364338643144353039394336613641314438443037363243346339456439663039",
                  "id": 1710,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "864:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x135a6636C8d1D5099C6a6A1D8D0762C4c9Ed9f09"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 1709,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2819,
                "src": "858:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$2819_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 1711,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "858:49:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2819",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1715,
            "mutability": "constant",
            "name": "FEE",
            "nodeType": "VariableDeclaration",
            "scope": 1888,
            "src": "912:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1713,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "912:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 1714,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "935:2:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 1725,
            "name": "RegistryCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1717,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1725,
                  "src": "972:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1716,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1719,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1725,
                  "src": "990:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1718,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1721,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 1725,
                  "src": "1010:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1720,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1723,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1725,
                  "src": "1035:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:89:2"
            },
            "src": "944:111:2"
          },
          {
            "body": {
              "id": 1841,
              "nodeType": "Block",
              "src": "1196:785:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1737,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1211:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1211:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1233:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1225:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1739,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1225:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1225:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1211:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 1744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1237:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 1736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1203:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1746,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1750,
                                "name": "name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1727,
                                "src": "1276:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1270:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 1748,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1270:5:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1270:11:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1270:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1292:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1270:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e616d652063616e277420626520656d707479",
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1295:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2539cfbdfcf6e0819904920aa76aae386ae698b29b6edfe92aff9fb1dae67c1",
                          "typeString": "literal_string \"name can't be empty\""
                        },
                        "value": "name can't be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2539cfbdfcf6e0819904920aa76aae386ae698b29b6edfe92aff9fb1dae67c1",
                          "typeString": "literal_string \"name can't be empty\""
                        }
                      ],
                      "id": 1747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1262:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1262:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1757,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:55:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1761,
                                "name": "symbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1729,
                                "src": "1338:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1332:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 1759,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1332:5:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1332:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1332:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1356:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1332:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73796d626f6c2063616e277420626520656d707479",
                        "id": 1766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1359:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b255bcfdcd84ec096fef3303bdd96b5a7fca85c386593a1ea509d2d7d73ed8aa",
                          "typeString": "literal_string \"symbol can't be empty\""
                        },
                        "value": "symbol can't be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b255bcfdcd84ec096fef3303bdd96b5a7fca85c386593a1ea509d2d7d73ed8aa",
                          "typeString": "literal_string \"symbol can't be empty\""
                        }
                      ],
                      "id": 1758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1324:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1768,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1773,
                                      "name": "registries",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 955,
                                      "src": "1422:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_REGISTRY_$972_storage_$",
                                        "typeString": "mapping(string memory => struct NftFactory.REGISTRY storage ref)"
                                      }
                                    },
                                    "id": 1775,
                                    "indexExpression": {
                                      "id": 1774,
                                      "name": "symbol",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1729,
                                      "src": "1433:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1422:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_REGISTRY_$972_storage",
                                      "typeString": "struct NftFactory.REGISTRY storage ref"
                                    }
                                  },
                                  "id": 1776,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "symbol",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 967,
                                  "src": "1422:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "id": 1772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1416:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1771,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1416:5:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1416:32:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes storage pointer"
                              }
                            ],
                            "id": 1770,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1406:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1406:43:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1782,
                                  "name": "symbol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1729,
                                  "src": "1469:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1463:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1780,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1463:5:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1463:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1779,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1453:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1453:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1406:71:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73796d626f6c20697320616c72656164792074616b656e",
                        "id": 1786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c044fa4814d8e1accfe272dbc04c2639288bb40fb8e92e0212c0016bdbcee8ad",
                          "typeString": "literal_string \"symbol is already taken\""
                        },
                        "value": "symbol is already taken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c044fa4814d8e1accfe272dbc04c2639288bb40fb8e92e0212c0016bdbcee8ad",
                          "typeString": "literal_string \"symbol is already taken\""
                        }
                      ],
                      "id": 1769,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1390:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:128:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1788,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:128:2"
                },
                {
                  "assignments": [
                    1790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1790,
                      "mutability": "mutable",
                      "name": "balaceOfUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 1841,
                      "src": "1525:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1789,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1525:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1796,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1793,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1576:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1576:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1791,
                        "name": "cifiTokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "1548:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2819",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2419,
                      "src": "1548:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1525:62:2"
                },
                {
                  "assignments": [
                    1798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1798,
                      "mutability": "mutable",
                      "name": "cifiDecimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 1841,
                      "src": "1594:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1797,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1594:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1802,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1799,
                        "name": "cifiTokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "1615:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2819",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2395,
                      "src": "1615:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1594:49:2"
                },
                {
                  "assignments": [
                    1804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1804,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1841,
                      "src": "1650:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1803,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1650:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1814,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 1812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1700:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1678:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 1808,
                              "name": "cifiDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1798,
                              "src": "1682:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1678:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1805,
                            "name": "FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1715,
                            "src": "1670:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2199,
                          "src": "1670:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1670:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2221,
                      "src": "1670:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1670:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1650:54:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1816,
                          "name": "balaceOfUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1790,
                          "src": "1727:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1817,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1804,
                          "src": "1743:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1727:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e74202042616c616e63652c20756e61626c6520746f207061792074686520726567697374726174696f6e20466565",
                        "id": 1819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1761:59:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b176a557dd3b37173f38f30030a441495c987784db31937769be8750e9fdb288",
                          "typeString": "literal_string \"insufficient  Balance, unable to pay the registration Fee\""
                        },
                        "value": "insufficient  Balance, unable to pay the registration Fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b176a557dd3b37173f38f30030a441495c987784db31937769be8750e9fdb288",
                          "typeString": "literal_string \"insufficient  Balance, unable to pay the registration Fee\""
                        }
                      ],
                      "id": 1815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1711:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:116:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1821,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:116:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1825,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1867:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1867:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1827,
                        "name": "feeAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 932,
                        "src": "1879:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1828,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "1891:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1822,
                        "name": "cifiTokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "1836:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2819",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2517,
                      "src": "1836:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1830,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1832,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1727,
                        "src": "1917:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1833,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1729,
                        "src": "1923:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1834,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1731,
                        "src": "1931:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1944:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1944:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1831,
                      "name": "Registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1023,
                      "src": "1908:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 1837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1838,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:47:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1971:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1735,
                  "id": 1840,
                  "nodeType": "Return",
                  "src": "1964:11:2"
                }
              ]
            },
            "functionSelector": "048a1792",
            "id": 1842,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1727,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1842,
                  "src": "1091:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1726,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1729,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1842,
                  "src": "1116:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1728,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1731,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 1842,
                  "src": "1143:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1730,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1084:89:2"
            },
            "returnParameters": {
              "id": 1735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1734,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1842,
                  "src": "1190:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1733,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1189:6:2"
            },
            "scope": 1888,
            "src": "1061:920:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1853,
              "nodeType": "Block",
              "src": "2037:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1849,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2079:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2079:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1847,
                        "name": "cifiTokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "2051:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2819",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2419,
                      "src": "2051:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2051:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1846,
                  "id": 1852,
                  "nodeType": "Return",
                  "src": "2044:46:2"
                }
              ]
            },
            "functionSelector": "c45c4f58",
            "id": 1854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balance1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2004:2:2"
            },
            "returnParameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1845,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "2028:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:9:2"
            },
            "scope": 1888,
            "src": "1987:109:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1886,
              "nodeType": "Block",
              "src": "2200:181:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1865,
                                      "name": "registries",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 955,
                                      "src": "2239:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_REGISTRY_$972_storage_$",
                                        "typeString": "mapping(string memory => struct NftFactory.REGISTRY storage ref)"
                                      }
                                    },
                                    "id": 1867,
                                    "indexExpression": {
                                      "id": 1866,
                                      "name": "symbol",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1856,
                                      "src": "2250:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2239:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_REGISTRY_$972_storage",
                                      "typeString": "struct NftFactory.REGISTRY storage ref"
                                    }
                                  },
                                  "id": 1868,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "symbol",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 967,
                                  "src": "2239:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "id": 1864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2233:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1863,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2233:5:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2233:32:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes storage pointer"
                              }
                            ],
                            "id": 1862,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2223:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2223:43:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1874,
                                  "name": "symbol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1856,
                                  "src": "2286:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2280:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1872,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2280:5:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2280:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1871,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2270:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2270:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2223:71:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73796d626f6c20697320616c72656164792074616b656e",
                        "id": 1878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2303:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c044fa4814d8e1accfe272dbc04c2639288bb40fb8e92e0212c0016bdbcee8ad",
                          "typeString": "literal_string \"symbol is already taken\""
                        },
                        "value": "symbol is already taken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c044fa4814d8e1accfe272dbc04c2639288bb40fb8e92e0212c0016bdbcee8ad",
                          "typeString": "literal_string \"symbol is already taken\""
                        }
                      ],
                      "id": 1861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2207:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2207:128:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1880,
                  "nodeType": "ExpressionStatement",
                  "src": "2207:128:2"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1881,
                        "name": "registries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 955,
                        "src": "2349:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_REGISTRY_$972_storage_$",
                          "typeString": "mapping(string memory => struct NftFactory.REGISTRY storage ref)"
                        }
                      },
                      "id": 1883,
                      "indexExpression": {
                        "id": 1882,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1856,
                        "src": "2360:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2349:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_REGISTRY_$972_storage",
                        "typeString": "struct NftFactory.REGISTRY storage ref"
                      }
                    },
                    "id": 1884,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "creator",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 971,
                    "src": "2349:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1860,
                  "id": 1885,
                  "nodeType": "Return",
                  "src": "2342:33:2"
                }
              ]
            },
            "functionSelector": "74b9982c",
            "id": 1887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1856,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1887,
                  "src": "2130:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2129:22:2"
            },
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1887,
                  "src": "2188:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2187:9:2"
            },
            "scope": 1888,
            "src": "2102:279:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1889,
        "src": "207:2177:2"
      }
    ],
    "src": "33:2353:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/Zaid/Desktop/New folder (13)/NFT_Contract_Factory/src/contracts/NftRegistry.sol",
      "exportedSymbols": {
        "Address": [
          3385
        ],
        "Context": [
          3408
        ],
        "ERC165": [
          1949
        ],
        "ERC20": [
          2819
        ],
        "ERC721_FORKED": [
          914
        ],
        "EnumerableMap": [
          3968
        ],
        "EnumerableSet": [
          4460
        ],
        "IERC165": [
          1961
        ],
        "IERC20": [
          2897
        ],
        "IERC721": [
          3013
        ],
        "IERC721Enumerable": [
          3044
        ],
        "IERC721Metadata": [
          3071
        ],
        "IERC721Receiver": [
          3089
        ],
        "NftFactory": [
          1687
        ],
        "NftRegistry": [
          1888
        ],
        "SafeMath": [
          2316
        ],
        "Strings": [
          4547
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.8",
            ".4"
          ]
        },
        "id": 1689,
        "name": "PragmaDirective",
        "src": "33:32:2"
      },
      {
        "attributes": {
          "SourceUnit": 2820,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 1889,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1690,
        "name": "ImportDirective",
        "src": "67:55:2"
      },
      {
        "attributes": {
          "SourceUnit": 2317,
          "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
          "file": "@openzeppelin/contracts/math/SafeMath.sol",
          "scope": 1889,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1691,
        "name": "ImportDirective",
        "src": "124:51:2"
      },
      {
        "attributes": {
          "SourceUnit": 1688,
          "absolutePath": "/C/Users/Zaid/Desktop/New folder (13)/NFT_Contract_Factory/src/contracts/NftFactory.sol",
          "file": "./NftFactory.sol",
          "scope": 1889,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1692,
        "name": "ImportDirective",
        "src": "177:26:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            914,
            1687,
            1949,
            1961,
            3013,
            3044,
            3071,
            3408
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1888,
            1687,
            914,
            3044,
            3071,
            3013,
            1949,
            1961,
            3408
          ],
          "name": "NftRegistry",
          "scope": 1889
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NftFactory",
                  "referencedDeclaration": 1687,
                  "type": "contract NftFactory"
                },
                "id": 1693,
                "name": "UserDefinedTypeName",
                "src": "231:10:2"
              }
            ],
            "id": 1694,
            "name": "InheritanceSpecifier",
            "src": "231:10:2"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 2316,
                  "type": "library SafeMath"
                },
                "id": 1695,
                "name": "UserDefinedTypeName",
                "src": "253:8:2"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1696,
                "name": "ElementaryTypeName",
                "src": "266:7:2"
              }
            ],
            "id": 1697,
            "name": "UsingForDirective",
            "src": "247:27:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1888,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_feeAccount",
                      "scope": 1707,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1698,
                        "name": "ElementaryTypeName",
                        "src": "292:7:2"
                      }
                    ],
                    "id": 1699,
                    "name": "VariableDeclaration",
                    "src": "292:19:2"
                  }
                ],
                "id": 1700,
                "name": "ParameterList",
                "src": "291:21:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1701,
                "name": "ParameterList",
                "src": "320:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 932,
                              "type": "address",
                              "value": "feeAccount"
                            },
                            "id": 1702,
                            "name": "Identifier",
                            "src": "327:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1699,
                              "type": "address",
                              "value": "_feeAccount"
                            },
                            "id": 1703,
                            "name": "Identifier",
                            "src": "340:11:2"
                          }
                        ],
                        "id": 1704,
                        "name": "Assignment",
                        "src": "327:24:2"
                      }
                    ],
                    "id": 1705,
                    "name": "ExpressionStatement",
                    "src": "327:24:2"
                  }
                ],
                "id": 1706,
                "name": "Block",
                "src": "320:37:2"
              }
            ],
            "id": 1707,
            "name": "FunctionDefinition",
            "src": "280:77:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "cifiTokenContract",
              "scope": 1888,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 2819,
                  "type": "contract ERC20"
                },
                "id": 1708,
                "name": "UserDefinedTypeName",
                "src": "832:5:2"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "contract ERC20",
                  "type_conversion": true
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2819,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 1709,
                    "name": "Identifier",
                    "src": "858:5:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "307831333561363633364338643144353039394336613641314438443037363243346339456439663039",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "address payable",
                      "value": "0x135a6636C8d1D5099C6a6A1D8D0762C4c9Ed9f09"
                    },
                    "id": 1710,
                    "name": "Literal",
                    "src": "864:42:2"
                  }
                ],
                "id": 1711,
                "name": "FunctionCall",
                "src": "858:49:2"
              }
            ],
            "id": 1712,
            "name": "VariableDeclaration",
            "src": "832:75:2"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "FEE",
              "scope": 1888,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1713,
                "name": "ElementaryTypeName",
                "src": "912:7:2"
              },
              {
                "attributes": {
                  "hexvalue": "3130",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 10",
                  "value": "10"
                },
                "id": 1714,
                "name": "Literal",
                "src": "935:2:2"
              }
            ],
            "id": 1715,
            "name": "VariableDeclaration",
            "src": "912:25:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "RegistryCreated"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "name",
                      "scope": 1725,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1716,
                        "name": "ElementaryTypeName",
                        "src": "972:6:2"
                      }
                    ],
                    "id": 1717,
                    "name": "VariableDeclaration",
                    "src": "972:11:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "scope": 1725,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1718,
                        "name": "ElementaryTypeName",
                        "src": "990:6:2"
                      }
                    ],
                    "id": 1719,
                    "name": "VariableDeclaration",
                    "src": "990:13:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "description",
                      "scope": 1725,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1720,
                        "name": "ElementaryTypeName",
                        "src": "1010:6:2"
                      }
                    ],
                    "id": 1721,
                    "name": "VariableDeclaration",
                    "src": "1010:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "caller",
                      "scope": 1725,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1722,
                        "name": "ElementaryTypeName",
                        "src": "1035:7:2"
                      }
                    ],
                    "id": 1723,
                    "name": "VariableDeclaration",
                    "src": "1035:14:2"
                  }
                ],
                "id": 1724,
                "name": "ParameterList",
                "src": "965:89:2"
              }
            ],
            "id": 1725,
            "name": "EventDefinition",
            "src": "944:111:2"
          },
          {
            "attributes": {
              "functionSelector": "048a1792",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createRegistry",
              "scope": 1888,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name",
                      "scope": 1842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1726,
                        "name": "ElementaryTypeName",
                        "src": "1091:6:2"
                      }
                    ],
                    "id": 1727,
                    "name": "VariableDeclaration",
                    "src": "1091:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "scope": 1842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1728,
                        "name": "ElementaryTypeName",
                        "src": "1116:6:2"
                      }
                    ],
                    "id": 1729,
                    "name": "VariableDeclaration",
                    "src": "1116:20:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "description",
                      "scope": 1842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1730,
                        "name": "ElementaryTypeName",
                        "src": "1143:6:2"
                      }
                    ],
                    "id": 1731,
                    "name": "VariableDeclaration",
                    "src": "1143:25:2"
                  }
                ],
                "id": 1732,
                "name": "ParameterList",
                "src": "1084:89:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1842,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1733,
                        "name": "ElementaryTypeName",
                        "src": "1190:4:2"
                      }
                    ],
                    "id": 1734,
                    "name": "VariableDeclaration",
                    "src": "1190:4:2"
                  }
                ],
                "id": 1735,
                "name": "ParameterList",
                "src": "1189:6:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                  "typeString": "literal_string \"Invalid address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1736,
                            "name": "Identifier",
                            "src": "1203:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1737,
                                    "name": "Identifier",
                                    "src": "1211:3:2"
                                  }
                                ],
                                "id": 1738,
                                "name": "MemberAccess",
                                "src": "1211:10:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 1739,
                                        "name": "ElementaryTypeName",
                                        "src": "1225:7:2"
                                      }
                                    ],
                                    "id": 1740,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1225:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1741,
                                    "name": "Literal",
                                    "src": "1233:1:2"
                                  }
                                ],
                                "id": 1742,
                                "name": "FunctionCall",
                                "src": "1225:10:2"
                              }
                            ],
                            "id": 1743,
                            "name": "BinaryOperation",
                            "src": "1211:24:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "496e76616c69642061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Invalid address\"",
                              "value": "Invalid address"
                            },
                            "id": 1744,
                            "name": "Literal",
                            "src": "1237:17:2"
                          }
                        ],
                        "id": 1745,
                        "name": "FunctionCall",
                        "src": "1203:52:2"
                      }
                    ],
                    "id": 1746,
                    "name": "ExpressionStatement",
                    "src": "1203:52:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c2539cfbdfcf6e0819904920aa76aae386ae698b29b6edfe92aff9fb1dae67c1",
                                  "typeString": "literal_string \"name can't be empty\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1747,
                            "name": "Identifier",
                            "src": "1262:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bytes memory",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "bytes"
                                            },
                                            "id": 1748,
                                            "name": "ElementaryTypeName",
                                            "src": "1270:5:2"
                                          }
                                        ],
                                        "id": 1749,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1270:5:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1727,
                                          "type": "string memory",
                                          "value": "name"
                                        },
                                        "id": 1750,
                                        "name": "Identifier",
                                        "src": "1276:4:2"
                                      }
                                    ],
                                    "id": 1751,
                                    "name": "FunctionCall",
                                    "src": "1270:11:2"
                                  }
                                ],
                                "id": 1752,
                                "name": "MemberAccess",
                                "src": "1270:18:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1753,
                                "name": "Literal",
                                "src": "1292:1:2"
                              }
                            ],
                            "id": 1754,
                            "name": "BinaryOperation",
                            "src": "1270:23:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "6e616d652063616e277420626520656d707479",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"name can't be empty\"",
                              "value": "name can't be empty"
                            },
                            "id": 1755,
                            "name": "Literal",
                            "src": "1295:21:2"
                          }
                        ],
                        "id": 1756,
                        "name": "FunctionCall",
                        "src": "1262:55:2"
                      }
                    ],
                    "id": 1757,
                    "name": "ExpressionStatement",
                    "src": "1262:55:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b255bcfdcd84ec096fef3303bdd96b5a7fca85c386593a1ea509d2d7d73ed8aa",
                                  "typeString": "literal_string \"symbol can't be empty\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1758,
                            "name": "Identifier",
                            "src": "1324:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bytes memory",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "bytes"
                                            },
                                            "id": 1759,
                                            "name": "ElementaryTypeName",
                                            "src": "1332:5:2"
                                          }
                                        ],
                                        "id": 1760,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1332:5:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1729,
                                          "type": "string memory",
                                          "value": "symbol"
                                        },
                                        "id": 1761,
                                        "name": "Identifier",
                                        "src": "1338:6:2"
                                      }
                                    ],
                                    "id": 1762,
                                    "name": "FunctionCall",
                                    "src": "1332:13:2"
                                  }
                                ],
                                "id": 1763,
                                "name": "MemberAccess",
                                "src": "1332:20:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1764,
                                "name": "Literal",
                                "src": "1356:1:2"
                              }
                            ],
                            "id": 1765,
                            "name": "BinaryOperation",
                            "src": "1332:25:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "73796d626f6c2063616e277420626520656d707479",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"symbol can't be empty\"",
                              "value": "symbol can't be empty"
                            },
                            "id": 1766,
                            "name": "Literal",
                            "src": "1359:23:2"
                          }
                        ],
                        "id": 1767,
                        "name": "FunctionCall",
                        "src": "1324:59:2"
                      }
                    ],
                    "id": 1768,
                    "name": "ExpressionStatement",
                    "src": "1324:59:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c044fa4814d8e1accfe272dbc04c2639288bb40fb8e92e0212c0016bdbcee8ad",
                                  "typeString": "literal_string \"symbol is already taken\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1769,
                            "name": "Identifier",
                            "src": "1390:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes storage pointer"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -8,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 1770,
                                    "name": "Identifier",
                                    "src": "1406:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "bytes"
                                            },
                                            "id": 1771,
                                            "name": "ElementaryTypeName",
                                            "src": "1416:5:2"
                                          }
                                        ],
                                        "id": 1772,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1416:5:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "symbol",
                                          "referencedDeclaration": 967,
                                          "type": "string storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct NftFactory.REGISTRY storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 955,
                                                  "type": "mapping(string memory => struct NftFactory.REGISTRY storage ref)",
                                                  "value": "registries"
                                                },
                                                "id": 1773,
                                                "name": "Identifier",
                                                "src": "1422:10:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1729,
                                                  "type": "string memory",
                                                  "value": "symbol"
                                                },
                                                "id": 1774,
                                                "name": "Identifier",
                                                "src": "1433:6:2"
                                              }
                                            ],
                                            "id": 1775,
                                            "name": "IndexAccess",
                                            "src": "1422:18:2"
                                          }
                                        ],
                                        "id": 1776,
                                        "name": "MemberAccess",
                                        "src": "1422:25:2"
                                      }
                                    ],
                                    "id": 1777,
                                    "name": "FunctionCall",
                                    "src": "1416:32:2"
                                  }
                                ],
                                "id": 1778,
                                "name": "FunctionCall",
                                "src": "1406:43:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -8,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 1779,
                                    "name": "Identifier",
                                    "src": "1453:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bytes memory",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "bytes"
                                            },
                                            "id": 1780,
                                            "name": "ElementaryTypeName",
                                            "src": "1463:5:2"
                                          }
                                        ],
                                        "id": 1781,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1463:5:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1729,
                                          "type": "string memory",
                                          "value": "symbol"
                                        },
                                        "id": 1782,
                                        "name": "Identifier",
                                        "src": "1469:6:2"
                                      }
                                    ],
                                    "id": 1783,
                                    "name": "FunctionCall",
                                    "src": "1463:13:2"
                                  }
                                ],
                                "id": 1784,
                                "name": "FunctionCall",
                                "src": "1453:24:2"
                              }
                            ],
                            "id": 1785,
                            "name": "BinaryOperation",
                            "src": "1406:71:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "73796d626f6c20697320616c72656164792074616b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"symbol is already taken\"",
                              "value": "symbol is already taken"
                            },
                            "id": 1786,
                            "name": "Literal",
                            "src": "1486:25:2"
                          }
                        ],
                        "id": 1787,
                        "name": "FunctionCall",
                        "src": "1390:128:2"
                      }
                    ],
                    "id": 1788,
                    "name": "ExpressionStatement",
                    "src": "1390:128:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1790
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "balaceOfUser",
                          "scope": 1841,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1789,
                            "name": "ElementaryTypeName",
                            "src": "1525:7:2"
                          }
                        ],
                        "id": 1790,
                        "name": "VariableDeclaration",
                        "src": "1525:20:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 2419,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1712,
                                  "type": "contract ERC20",
                                  "value": "cifiTokenContract"
                                },
                                "id": 1791,
                                "name": "Identifier",
                                "src": "1548:17:2"
                              }
                            ],
                            "id": 1792,
                            "name": "MemberAccess",
                            "src": "1548:27:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1793,
                                "name": "Identifier",
                                "src": "1576:3:2"
                              }
                            ],
                            "id": 1794,
                            "name": "MemberAccess",
                            "src": "1576:10:2"
                          }
                        ],
                        "id": 1795,
                        "name": "FunctionCall",
                        "src": "1548:39:2"
                      }
                    ],
                    "id": 1796,
                    "name": "VariableDeclarationStatement",
                    "src": "1525:62:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1798
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "cifiDecimals",
                          "scope": 1841,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint8",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint8",
                              "type": "uint8"
                            },
                            "id": 1797,
                            "name": "ElementaryTypeName",
                            "src": "1594:5:2"
                          }
                        ],
                        "id": 1798,
                        "name": "VariableDeclaration",
                        "src": "1594:18:2"
                      },
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint8",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "decimals",
                              "referencedDeclaration": 2395,
                              "type": "function () view external returns (uint8)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1712,
                                  "type": "contract ERC20",
                                  "value": "cifiTokenContract"
                                },
                                "id": 1799,
                                "name": "Identifier",
                                "src": "1615:17:2"
                              }
                            ],
                            "id": 1800,
                            "name": "MemberAccess",
                            "src": "1615:26:2"
                          }
                        ],
                        "id": 1801,
                        "name": "FunctionCall",
                        "src": "1615:28:2"
                      }
                    ],
                    "id": 1802,
                    "name": "VariableDeclarationStatement",
                    "src": "1594:49:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1804
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "feeAmount",
                          "scope": 1841,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1803,
                            "name": "ElementaryTypeName",
                            "src": "1650:7:2"
                          }
                        ],
                        "id": 1804,
                        "name": "VariableDeclaration",
                        "src": "1650:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "div",
                              "referencedDeclaration": 2221,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "mul",
                                      "referencedDeclaration": 2199,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1715,
                                          "type": "uint256",
                                          "value": "FEE"
                                        },
                                        "id": 1805,
                                        "name": "Identifier",
                                        "src": "1670:3:2"
                                      }
                                    ],
                                    "id": 1806,
                                    "name": "MemberAccess",
                                    "src": "1670:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 1807,
                                        "name": "Literal",
                                        "src": "1678:2:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1798,
                                          "type": "uint8",
                                          "value": "cifiDecimals"
                                        },
                                        "id": 1808,
                                        "name": "Identifier",
                                        "src": "1682:12:2"
                                      }
                                    ],
                                    "id": 1809,
                                    "name": "BinaryOperation",
                                    "src": "1678:16:2"
                                  }
                                ],
                                "id": 1810,
                                "name": "FunctionCall",
                                "src": "1670:25:2"
                              }
                            ],
                            "id": 1811,
                            "name": "MemberAccess",
                            "src": "1670:29:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "313030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 100",
                              "value": "100"
                            },
                            "id": 1812,
                            "name": "Literal",
                            "src": "1700:3:2"
                          }
                        ],
                        "id": 1813,
                        "name": "FunctionCall",
                        "src": "1670:34:2"
                      }
                    ],
                    "id": 1814,
                    "name": "VariableDeclarationStatement",
                    "src": "1650:54:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b176a557dd3b37173f38f30030a441495c987784db31937769be8750e9fdb288",
                                  "typeString": "literal_string \"insufficient  Balance, unable to pay the registration Fee\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1815,
                            "name": "Identifier",
                            "src": "1711:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1790,
                                  "type": "uint256",
                                  "value": "balaceOfUser"
                                },
                                "id": 1816,
                                "name": "Identifier",
                                "src": "1727:12:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1804,
                                  "type": "uint256",
                                  "value": "feeAmount"
                                },
                                "id": 1817,
                                "name": "Identifier",
                                "src": "1743:9:2"
                              }
                            ],
                            "id": 1818,
                            "name": "BinaryOperation",
                            "src": "1727:25:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "696e73756666696369656e74202042616c616e63652c20756e61626c6520746f207061792074686520726567697374726174696f6e20466565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"insufficient  Balance, unable to pay the registration Fee\"",
                              "value": "insufficient  Balance, unable to pay the registration Fee"
                            },
                            "id": 1819,
                            "name": "Literal",
                            "src": "1761:59:2"
                          }
                        ],
                        "id": 1820,
                        "name": "FunctionCall",
                        "src": "1711:116:2"
                      }
                    ],
                    "id": 1821,
                    "name": "ExpressionStatement",
                    "src": "1711:116:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 2517,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1712,
                                  "type": "contract ERC20",
                                  "value": "cifiTokenContract"
                                },
                                "id": 1822,
                                "name": "Identifier",
                                "src": "1836:17:2"
                              }
                            ],
                            "id": 1824,
                            "name": "MemberAccess",
                            "src": "1836:30:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1825,
                                "name": "Identifier",
                                "src": "1867:3:2"
                              }
                            ],
                            "id": 1826,
                            "name": "MemberAccess",
                            "src": "1867:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 932,
                              "type": "address",
                              "value": "feeAccount"
                            },
                            "id": 1827,
                            "name": "Identifier",
                            "src": "1879:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1804,
                              "type": "uint256",
                              "value": "feeAmount"
                            },
                            "id": 1828,
                            "name": "Identifier",
                            "src": "1891:9:2"
                          }
                        ],
                        "id": 1829,
                        "name": "FunctionCall",
                        "src": "1836:65:2"
                      }
                    ],
                    "id": 1830,
                    "name": "ExpressionStatement",
                    "src": "1836:65:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1023,
                              "type": "function (string memory,string memory,string memory,address)",
                              "value": "Registry"
                            },
                            "id": 1831,
                            "name": "Identifier",
                            "src": "1908:8:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1727,
                              "type": "string memory",
                              "value": "name"
                            },
                            "id": 1832,
                            "name": "Identifier",
                            "src": "1917:4:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1729,
                              "type": "string memory",
                              "value": "symbol"
                            },
                            "id": 1833,
                            "name": "Identifier",
                            "src": "1923:6:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1731,
                              "type": "string memory",
                              "value": "description"
                            },
                            "id": 1834,
                            "name": "Identifier",
                            "src": "1931:11:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1835,
                                "name": "Identifier",
                                "src": "1944:3:2"
                              }
                            ],
                            "id": 1836,
                            "name": "MemberAccess",
                            "src": "1944:10:2"
                          }
                        ],
                        "id": 1837,
                        "name": "FunctionCall",
                        "src": "1908:47:2"
                      }
                    ],
                    "id": 1838,
                    "name": "ExpressionStatement",
                    "src": "1908:47:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1735
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 1839,
                        "name": "Literal",
                        "src": "1971:4:2"
                      }
                    ],
                    "id": 1840,
                    "name": "Return",
                    "src": "1964:11:2"
                  }
                ],
                "id": 1841,
                "name": "Block",
                "src": "1196:785:2"
              }
            ],
            "id": 1842,
            "name": "FunctionDefinition",
            "src": "1061:920:2"
          },
          {
            "attributes": {
              "functionSelector": "c45c4f58",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "balance1",
              "scope": 1888,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1843,
                "name": "ParameterList",
                "src": "2004:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1854,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1844,
                        "name": "ElementaryTypeName",
                        "src": "2028:7:2"
                      }
                    ],
                    "id": 1845,
                    "name": "VariableDeclaration",
                    "src": "2028:7:2"
                  }
                ],
                "id": 1846,
                "name": "ParameterList",
                "src": "2027:9:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1846
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 2419,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1712,
                                  "type": "contract ERC20",
                                  "value": "cifiTokenContract"
                                },
                                "id": 1847,
                                "name": "Identifier",
                                "src": "2051:17:2"
                              }
                            ],
                            "id": 1848,
                            "name": "MemberAccess",
                            "src": "2051:27:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1849,
                                "name": "Identifier",
                                "src": "2079:3:2"
                              }
                            ],
                            "id": 1850,
                            "name": "MemberAccess",
                            "src": "2079:10:2"
                          }
                        ],
                        "id": 1851,
                        "name": "FunctionCall",
                        "src": "2051:39:2"
                      }
                    ],
                    "id": 1852,
                    "name": "Return",
                    "src": "2044:46:2"
                  }
                ],
                "id": 1853,
                "name": "Block",
                "src": "2037:59:2"
              }
            ],
            "id": 1854,
            "name": "FunctionDefinition",
            "src": "1987:109:2"
          },
          {
            "attributes": {
              "functionSelector": "74b9982c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getRegistryAddress",
              "scope": 1888,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "scope": 1887,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1855,
                        "name": "ElementaryTypeName",
                        "src": "2130:6:2"
                      }
                    ],
                    "id": 1856,
                    "name": "VariableDeclaration",
                    "src": "2130:20:2"
                  }
                ],
                "id": 1857,
                "name": "ParameterList",
                "src": "2129:22:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1887,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1858,
                        "name": "ElementaryTypeName",
                        "src": "2188:7:2"
                      }
                    ],
                    "id": 1859,
                    "name": "VariableDeclaration",
                    "src": "2188:7:2"
                  }
                ],
                "id": 1860,
                "name": "ParameterList",
                "src": "2187:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c044fa4814d8e1accfe272dbc04c2639288bb40fb8e92e0212c0016bdbcee8ad",
                                  "typeString": "literal_string \"symbol is already taken\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1861,
                            "name": "Identifier",
                            "src": "2207:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes storage pointer"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -8,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 1862,
                                    "name": "Identifier",
                                    "src": "2223:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "bytes"
                                            },
                                            "id": 1863,
                                            "name": "ElementaryTypeName",
                                            "src": "2233:5:2"
                                          }
                                        ],
                                        "id": 1864,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "2233:5:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "symbol",
                                          "referencedDeclaration": 967,
                                          "type": "string storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct NftFactory.REGISTRY storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 955,
                                                  "type": "mapping(string memory => struct NftFactory.REGISTRY storage ref)",
                                                  "value": "registries"
                                                },
                                                "id": 1865,
                                                "name": "Identifier",
                                                "src": "2239:10:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1856,
                                                  "type": "string memory",
                                                  "value": "symbol"
                                                },
                                                "id": 1866,
                                                "name": "Identifier",
                                                "src": "2250:6:2"
                                              }
                                            ],
                                            "id": 1867,
                                            "name": "IndexAccess",
                                            "src": "2239:18:2"
                                          }
                                        ],
                                        "id": 1868,
                                        "name": "MemberAccess",
                                        "src": "2239:25:2"
                                      }
                                    ],
                                    "id": 1869,
                                    "name": "FunctionCall",
                                    "src": "2233:32:2"
                                  }
                                ],
                                "id": 1870,
                                "name": "FunctionCall",
                                "src": "2223:43:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -8,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 1871,
                                    "name": "Identifier",
                                    "src": "2270:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bytes memory",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "bytes"
                                            },
                                            "id": 1872,
                                            "name": "ElementaryTypeName",
                                            "src": "2280:5:2"
                                          }
                                        ],
                                        "id": 1873,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "2280:5:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1856,
                                          "type": "string memory",
                                          "value": "symbol"
                                        },
                                        "id": 1874,
                                        "name": "Identifier",
                                        "src": "2286:6:2"
                                      }
                                    ],
                                    "id": 1875,
                                    "name": "FunctionCall",
                                    "src": "2280:13:2"
                                  }
                                ],
                                "id": 1876,
                                "name": "FunctionCall",
                                "src": "2270:24:2"
                              }
                            ],
                            "id": 1877,
                            "name": "BinaryOperation",
                            "src": "2223:71:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "73796d626f6c20697320616c72656164792074616b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"symbol is already taken\"",
                              "value": "symbol is already taken"
                            },
                            "id": 1878,
                            "name": "Literal",
                            "src": "2303:25:2"
                          }
                        ],
                        "id": 1879,
                        "name": "FunctionCall",
                        "src": "2207:128:2"
                      }
                    ],
                    "id": 1880,
                    "name": "ExpressionStatement",
                    "src": "2207:128:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1860
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "creator",
                          "referencedDeclaration": 971,
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct NftFactory.REGISTRY storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 955,
                                  "type": "mapping(string memory => struct NftFactory.REGISTRY storage ref)",
                                  "value": "registries"
                                },
                                "id": 1881,
                                "name": "Identifier",
                                "src": "2349:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1856,
                                  "type": "string memory",
                                  "value": "symbol"
                                },
                                "id": 1882,
                                "name": "Identifier",
                                "src": "2360:6:2"
                              }
                            ],
                            "id": 1883,
                            "name": "IndexAccess",
                            "src": "2349:18:2"
                          }
                        ],
                        "id": 1884,
                        "name": "MemberAccess",
                        "src": "2349:26:2"
                      }
                    ],
                    "id": 1885,
                    "name": "Return",
                    "src": "2342:33:2"
                  }
                ],
                "id": 1886,
                "name": "Block",
                "src": "2200:181:2"
              }
            ],
            "id": 1887,
            "name": "FunctionDefinition",
            "src": "2102:279:2"
          }
        ],
        "id": 1888,
        "name": "ContractDefinition",
        "src": "207:2177:2"
      }
    ],
    "id": 1889,
    "name": "SourceUnit",
    "src": "33:2353:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9D9D1cBB54B5E63f494fC97110581f329f689dB1",
      "transactionHash": "0x2f36aeeb0a24cc151323a8eb7b9afb89500e7f2434fa2f32c27c20a987f47dc0"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-06T21:16:33.351Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "Mint(string)": {
        "notice": "this function allows to mint more of your NFT  "
      },
      "Registry(string,string,string,address)": {
        "notice": "a registry function that iis been called by the NFT registry smart contract"
      },
      "approveAll(address)": {
        "notice": "this function allows to approve all the tokens the address owns at once"
      },
      "approveMany(address,uint256[])": {
        "notice": "this function allows to approve more than one token id at once"
      },
      "assignDataToToken(uint256,string)": {
        "notice": "this function assignes the URI to automaticlay add the id number at the end of the URI"
      },
      "burn(string,uint256)": {
        "notice": "this function allows you burn your NFT  "
      },
      "getMetadataAtID(uint256)": {
        "notice": "this function helps with queries to Fetch the metadata for a givine token id"
      },
      "getTokenOwner(uint256)": {
        "notice": "this function helps with queries to Fetch the owner address of the token by givine token id"
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "this overload function allows to transfer tokens and updates all the mapping queries(without filling the URI)  "
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "this overload function allows to transfer tokens and updates all the mapping queries(with filling the URI)  "
      },
      "tokensOf(address)": {
        "notice": "this function helps with queries to Fetch all the tokens that the address owns by givine address"
      }
    },
    "version": 1
  }
}